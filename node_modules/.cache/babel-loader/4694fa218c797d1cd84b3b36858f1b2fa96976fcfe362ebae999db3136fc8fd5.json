{"ast":null,"code":"import { database } from \"./firebaseapp\";\nimport store from \"../reducers/store\";\nimport request from \"request\";\nfunction waitAndRecallIfNoUID(fnCameFrom, params) {\n  if (!store.getState().user.uid) {\n    const unsubscribe = store.subscribe(() => {\n      if (store.getState().user.uid) {\n        fnCameFrom(...params);\n        unsubscribe(); //Todo: Add a timeout that does this anyways\n      }\n    });\n  }\n}\n\n/**\n * Async fetches objName from the firebase DB, calling callback with the data\n *\n * @param {String} objName : Location + object to fetch from the database\n * @param {Function} callback : Function to call with that data\n *\n * @example\n * getDatabaseObject(\"songs\", (data) => {konsole.log(data)});\n */\nexport function getDBObject(objName, callback) {\n  let ref = database().ref(objName);\n  ref.once(\"value\").then(snapshot => {\n    callback(snapshot.val());\n  });\n}\nexport function getShallowDBObject(objName, callback) {\n  request({\n    url: `https://ourkorean-56a3e.firebaseio.com/${objName}.json?shallow=true`\n  }, (e, r, body) => {\n    callback(JSON.parse(body));\n  });\n}\n\n/**\n * @param {string} objName\n * @param {Function} callback\n */\nexport function getUserDBObject(objName, callback) {\n  waitAndRecallIfNoUID(getUserDBObject, [objName, callback]);\n  getDBObject(`users/${store.getState().user.uid}/${objName}`, callback);\n}\n\n/**\n * Async set op on the database.\n * @param {string} dbObjName\n * @param {Object} objToWrite\n */\nexport function updateDBObject(dbObjName, objToWrite) {\n  let callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : () => {};\n  database().ref(dbObjName).update(objToWrite).then(callback);\n}\n\n/**\n * Async del op on the database.\n * @param {string} dbObjName\n */\nexport function removeDBObject(dbObjName) {\n  let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => {};\n  database().ref(dbObjName).remove().then(callback);\n}\n\n/**\n * @param {string} dbObjName\n * @param {any} objToWrite\n */\nexport function updateUserDBObject(dbObjName, objToWrite) {\n  waitAndRecallIfNoUID(getUserDBObject, [dbObjName, objToWrite]);\n  updateDBObject(\"users/\" + store.getState().user.uid + \"/\" + dbObjName, objToWrite);\n}\n\n/**\n * @param {string} dbObjName\n * @param {{ (views: any): any; (arg0: any): any; }} functionToRun\n */\nexport function transaction(dbObjName, functionToRun) {\n  let ref = database().ref(dbObjName);\n  ref.transaction(snapshot => {\n    return functionToRun(snapshot);\n  });\n}\n\n/**\n * @param {any} nick\n * @param {{ (uid: any): void; (uid: any): void; (arg0: string): void; }} callback\n */\nexport function getUidFromNick(nick, callback) {\n  //Todo: Cache this result?\n  /**\n   * @param {{ [x: string]: any; }} userNickObjs\n   */\n  getDBObject(`users/takennicks`, userNickObjs => {\n    Object.keys(userNickObjs).forEach(uid => {\n      if (nick === userNickObjs[uid]) {\n        callback(uid);\n        return;\n      }\n    });\n  });\n}","map":{"version":3,"names":["database","store","request","waitAndRecallIfNoUID","fnCameFrom","params","getState","user","uid","unsubscribe","subscribe","getDBObject","objName","callback","ref","once","then","snapshot","val","getShallowDBObject","url","e","r","body","JSON","parse","getUserDBObject","updateDBObject","dbObjName","objToWrite","arguments","length","undefined","update","removeDBObject","remove","updateUserDBObject","transaction","functionToRun","getUidFromNick","nick","userNickObjs","Object","keys","forEach"],"sources":["/home/xacket/Projects/engresume/src/firebase/database.js"],"sourcesContent":["import { database } from \"./firebaseapp\";\nimport store from \"../reducers/store\";\nimport request from \"request\";\n\nfunction waitAndRecallIfNoUID(fnCameFrom, params) {\n  if (!store.getState().user.uid) {\n    const unsubscribe = store.subscribe(() => {\n      if (store.getState().user.uid) {\n        fnCameFrom(...params);\n        unsubscribe(); //Todo: Add a timeout that does this anyways\n      }\n    });\n  }\n}\n\n/**\n * Async fetches objName from the firebase DB, calling callback with the data\n *\n * @param {String} objName : Location + object to fetch from the database\n * @param {Function} callback : Function to call with that data\n *\n * @example\n * getDatabaseObject(\"songs\", (data) => {konsole.log(data)});\n */\nexport function getDBObject(objName, callback) {\n  let ref = database().ref(objName);\n  ref.once(\"value\").then((snapshot) => {\n    callback(snapshot.val());\n  });\n}\n\nexport function getShallowDBObject(objName, callback) {\n  request(\n    {\n      url: `https://ourkorean-56a3e.firebaseio.com/${objName}.json?shallow=true`,\n    },\n    (e, r, body) => {\n      callback(JSON.parse(body));\n    }\n  );\n}\n\n/**\n * @param {string} objName\n * @param {Function} callback\n */\nexport function getUserDBObject(objName, callback) {\n  waitAndRecallIfNoUID(getUserDBObject, [objName, callback]);\n\n  getDBObject(`users/${store.getState().user.uid}/${objName}`, callback);\n}\n\n/**\n * Async set op on the database.\n * @param {string} dbObjName\n * @param {Object} objToWrite\n */\nexport function updateDBObject(dbObjName, objToWrite, callback = () => {}) {\n  database().ref(dbObjName).update(objToWrite).then(callback);\n}\n\n/**\n * Async del op on the database.\n * @param {string} dbObjName\n */\nexport function removeDBObject(dbObjName, callback = () => {}) {\n  database().ref(dbObjName).remove().then(callback);\n}\n\n/**\n * @param {string} dbObjName\n * @param {any} objToWrite\n */\nexport function updateUserDBObject(dbObjName, objToWrite) {\n  waitAndRecallIfNoUID(getUserDBObject, [dbObjName, objToWrite]);\n\n  updateDBObject(\n    \"users/\" + store.getState().user.uid + \"/\" + dbObjName,\n    objToWrite\n  );\n}\n\n/**\n * @param {string} dbObjName\n * @param {{ (views: any): any; (arg0: any): any; }} functionToRun\n */\nexport function transaction(dbObjName, functionToRun) {\n  let ref = database().ref(dbObjName);\n  ref.transaction((snapshot) => {\n    return functionToRun(snapshot);\n  });\n}\n\n/**\n * @param {any} nick\n * @param {{ (uid: any): void; (uid: any): void; (arg0: string): void; }} callback\n */\nexport function getUidFromNick(nick, callback) {\n  //Todo: Cache this result?\n  /**\n   * @param {{ [x: string]: any; }} userNickObjs\n   */\n  getDBObject(`users/takennicks`, (userNickObjs) => {\n    Object.keys(userNickObjs).forEach((uid) => {\n      if (nick === userNickObjs[uid]) {\n        callback(uid);\n        return;\n      }\n    });\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}