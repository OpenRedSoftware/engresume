{"ast":null,"code":"var _jsxFileName = \"/home/xacket/Projects/engresume/src/pages/learn/corelesson/Review.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Fade } from \"react-bootstrap\";\nimport store from \"../../../reducers/store\";\nimport { getCurrentQuestion, isAQuestion, isLessonInputCorrect } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst invisLine = /*#__PURE__*/_jsxDEV(\"span\", {\n  children: \"\\xA0\\xA0\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 19\n}, this);\nfunction displayRightAnswer() {\n  return isAQuestion() && store.getState().reviewState || !isLessonInputCorrect() ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Answer: \", getCurrentQuestion().answer]\n  }, void 0, true) : invisLine;\n}\nfunction displayHint() {\n  return getCurrentQuestion() && getCurrentQuestion().hint.length > 0 ? getCurrentQuestion().hint : invisLine;\n}\nlet prevQindex;\nconst Review = props => {\n  _s();\n  const [rightAnswer, setRightAnswer] = useState(invisLine);\n  const [hint, setHint] = useState(invisLine);\n  if (props.questionIndex !== prevQindex) {\n    prevQindex = props.questionIndex;\n    setHint(displayHint());\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Fade, {\n      onEnter: () => {\n        setRightAnswer(displayRightAnswer());\n      },\n      onExit: () => {\n        setRightAnswer(invisLine);\n      },\n      in: props.review,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"insight-fade-text\",\n        children: rightAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Fade, {\n      onEnter: () => {\n        setHint(displayHint());\n      },\n      onExit: () => {\n        setHint(invisLine);\n      },\n      in: props.review || !props.review && getCurrentQuestion() && getCurrentQuestion().answeredCount === 0,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"insight-fade-text\",\n        children: hint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Review, \"5Rc4Wr3cSxx6onK/gL15U76yElk=\");\n_c = Review;\nconst mapStateToProps = state => ({\n  input: state.lessonInput,\n  review: state.lessonReview,\n  questionIndex: state.questionIndex\n});\nexport default connect(mapStateToProps)(Review);\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["React","useState","connect","Fade","store","getCurrentQuestion","isAQuestion","isLessonInputCorrect","jsxDEV","_jsxDEV","Fragment","_Fragment","invisLine","children","fileName","_jsxFileName","lineNumber","columnNumber","displayRightAnswer","getState","reviewState","answer","displayHint","hint","length","prevQindex","Review","props","_s","rightAnswer","setRightAnswer","setHint","questionIndex","onEnter","onExit","in","review","id","answeredCount","_c","mapStateToProps","state","input","lessonInput","lessonReview","$RefreshReg$"],"sources":["/home/xacket/Projects/engresume/src/pages/learn/corelesson/Review.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Fade } from \"react-bootstrap\";\nimport store from \"../../../reducers/store\";\nimport {\n  getCurrentQuestion,\n  isAQuestion,\n  isLessonInputCorrect,\n} from \"../utils\";\n\nconst invisLine = <span>&nbsp;&nbsp;</span>;\n\nfunction displayRightAnswer() {\n  return (isAQuestion() &&\n    store.getState().reviewState) ||\n    !isLessonInputCorrect() ? (\n    <>Answer: {getCurrentQuestion().answer}</>\n  ) : (\n    invisLine\n  );\n}\n\nfunction displayHint() {\n  return getCurrentQuestion() && getCurrentQuestion().hint.length > 0\n    ? getCurrentQuestion().hint\n    : invisLine;\n}\n\nlet prevQindex;\nconst Review = (props) => {\n  const [rightAnswer, setRightAnswer] = useState(invisLine);\n  const [hint, setHint] = useState(invisLine);\n\n  if (props.questionIndex !== prevQindex) {\n    prevQindex = props.questionIndex;\n    setHint(displayHint());\n  }\n\n  return (\n    <>\n      <Fade\n        onEnter={() => {\n          setRightAnswer(displayRightAnswer());\n        }}\n        onExit={() => {\n          setRightAnswer(invisLine);\n        }}\n        in={props.review}\n      >\n        <div id=\"insight-fade-text\">{rightAnswer}</div>\n      </Fade>\n      <Fade\n        onEnter={() => {\n          setHint(displayHint());\n        }}\n        onExit={() => {\n          setHint(invisLine);\n        }}\n        in={\n          props.review ||\n          (!props.review &&\n            getCurrentQuestion() &&\n            getCurrentQuestion().answeredCount === 0)\n        }\n      >\n        <div id=\"insight-fade-text\">{hint}</div>\n      </Fade>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  input: state.lessonInput,\n  review: state.lessonReview,\n  questionIndex: state.questionIndex,\n});\n\nexport default connect(mapStateToProps)(Review);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}