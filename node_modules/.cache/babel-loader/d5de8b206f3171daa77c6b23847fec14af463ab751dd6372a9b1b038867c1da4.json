{"ast":null,"code":"var _jsxFileName = \"/home/xacket/Projects/engresume/src/pages/account/SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\nimport { firebaseAppAuth } from \"../../firebase/firebaseapp\";\nimport { Redirect } from \"react-router-dom\";\nimport { centerBox, enterEmailFormGroup, enterPasswordFormGroup } from \"./SignInUpBox\";\nimport ErrorMsg from \"../../components/ErrorMsg\";\nimport { goToOtherButton } from \"./utils\";\nimport { getDBObject } from \"../../firebase/database\";\nimport store from \"../../reducers/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet retrievedNicks = null;\nconst SignUp = props => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [nick, setNick] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confPassword, setConfPassword] = useState(\"\");\n  if (props.user) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: store.getState().startingPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  if (retrievedNicks === null) {\n    retrievedNicks = [];\n    getDBObject(\"users/takennicks/\", takenNicks => {\n      for (const property in takenNicks) {\n        retrievedNicks.unshift(takenNicks[property]);\n      }\n    });\n  }\n  return centerBox( /*#__PURE__*/_jsxDEV(Form, {\n    children: [goToOtherButton(), enterEmailFormGroup(email, setEmail), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formNickName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Nickname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Nickname\",\n        value: nick,\n        onChange: e => {\n          setNick(e.target.value);\n          if (retrievedNicks.includes(e.target.value)) {\n            store.dispatch({\n              type: \"SET_ERROR\",\n              error: \"That nickname is already taken!\"\n            });\n          } else {\n            store.dispatch({\n              type: \"WIPE_ERROR\"\n            });\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), enterPasswordFormGroup(password, setPassword), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"passwordValidate \",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: confPassword,\n        onChange: e => {\n          setConfPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMsg, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: e => {\n        e.preventDefault();\n        if (nick.length === 0) {\n          store.dispatch({\n            type: \"SET_ERROR\",\n            error: \"You must provide a nickname!\"\n          });\n        } else {\n          store.dispatch({\n            type: \"NEW_USER\",\n            nick: nick\n          });\n          firebaseAppAuth.createUserWithEmailAndPassword(email, password).catch(e => {\n            store.dispatch({\n              type: \"SET_ERROR\",\n              error: e.message\n            });\n          });\n        }\n      },\n      children: \"Create account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this), props.user);\n};\n_s(SignUp, \"k+oe3oCzokVvEBkpAeSY0oyoFp0=\");\n_c = SignUp;\nexport default withFirebaseAuth({\n  firebaseAppAuth\n})(SignUp);\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","Form","Button","withFirebaseAuth","firebaseAppAuth","Redirect","centerBox","enterEmailFormGroup","enterPasswordFormGroup","ErrorMsg","goToOtherButton","getDBObject","store","jsxDEV","_jsxDEV","retrievedNicks","SignUp","props","_s","email","setEmail","nick","setNick","password","setPassword","confPassword","setConfPassword","user","to","getState","startingPage","fileName","_jsxFileName","lineNumber","columnNumber","takenNicks","property","unshift","children","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","includes","dispatch","error","variant","onClick","preventDefault","length","createUserWithEmailAndPassword","catch","message","_c","$RefreshReg$"],"sources":["/home/xacket/Projects/engresume/src/pages/account/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\nimport { firebaseAppAuth } from \"../../firebase/firebaseapp\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  centerBox,\n  enterEmailFormGroup,\n  enterPasswordFormGroup,\n} from \"./SignInUpBox\";\nimport ErrorMsg from \"../../components/ErrorMsg\";\nimport { goToOtherButton } from \"./utils\";\nimport { getDBObject } from \"../../firebase/database\";\nimport store from \"../../reducers/store\";\n\nlet retrievedNicks = null;\n\nconst SignUp = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [nick, setNick] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confPassword, setConfPassword] = useState(\"\");\n\n  if (props.user) {\n    return <Redirect to={store.getState().startingPage} />;\n  }\n\n  if (retrievedNicks === null) {\n    retrievedNicks = [];\n    getDBObject(\"users/takennicks/\", (takenNicks) => {\n      for (const property in takenNicks) {\n        retrievedNicks.unshift(takenNicks[property]);\n      }\n    });\n  }\n\n  return centerBox(\n    <Form>\n      {goToOtherButton()}\n      {enterEmailFormGroup(email, setEmail)}\n      <Form.Group controlId=\"formNickName\">\n        <Form.Label>Nickname</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Nickname\"\n          value={nick}\n          onChange={(e) => {\n            setNick(e.target.value);\n            if (retrievedNicks.includes(e.target.value)) {\n              store.dispatch({\n                type: \"SET_ERROR\",\n                error: \"That nickname is already taken!\",\n              });\n            } else {\n              store.dispatch({ type: \"WIPE_ERROR\" });\n            }\n          }}\n        />\n      </Form.Group>\n      {enterPasswordFormGroup(password, setPassword)}\n      <Form.Group controlId=\"passwordValidate \">\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Password\"\n          value={confPassword}\n          onChange={(e) => {\n            setConfPassword(e.target.value);\n          }}\n        />\n      </Form.Group>\n      <ErrorMsg />\n      <Button\n        variant=\"primary\"\n        type=\"submit\"\n        onClick={(e) => {\n          e.preventDefault();\n          if (nick.length === 0) {\n            store.dispatch({\n              type: \"SET_ERROR\",\n              error: \"You must provide a nickname!\",\n            });\n          } else {\n            store.dispatch({ type: \"NEW_USER\", nick: nick });\n            firebaseAppAuth\n              .createUserWithEmailAndPassword(email, password)\n              .catch((e) => {\n                store.dispatch({ type: \"SET_ERROR\", error: e.message });\n              });\n          }\n        }}\n      >\n        Create account\n      </Button>\n    </Form>,\n    props.user\n  );\n};\n\nexport default withFirebaseAuth({\n  firebaseAppAuth,\n})(SignUp);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}