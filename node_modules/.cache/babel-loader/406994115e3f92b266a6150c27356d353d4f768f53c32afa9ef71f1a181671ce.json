{"ast":null,"code":"import { isLessonInputCorrect } from \"../pages/learn/utils\";\nexport function lessonError() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"LESSON_UPDATE_ERROR\":\n      return action.error;\n    default:\n      return state;\n  }\n}\nexport function lessonInput() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"LESSON_UPDATE_INPUT\":\n      return action.input;\n    default:\n      return state;\n  }\n}\nexport function lessonReview() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"LESSON_UPDATE_REVIEW\") {\n    return action.review;\n  }\n  return state;\n}\nexport function lessonNumberOfTimesWrong() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"LESSON_INC_NUM_TIMES_WRONG\":\n      return state + 1;\n    case \"LESSON_RESET_NUM_TIMES_WRONG\":\n      return 1;\n    default:\n      return state;\n  }\n}\nexport function lessonAuthor() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"LESSON_SET_AUTHOR\":\n      return action.author;\n    default:\n      return state;\n  }\n}\nexport function lessonLessonName() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"LESSON_SET_LESSON_NAME\") {\n    return action.lessonName;\n  }\n  return state;\n}\nexport function questions() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"LESSON_SET_QUESTIONS\":\n      return action.questions;\n    case \"LESSON_UPDATE_ANSWERED_COUNTS_TIMES\":\n      if (!action.qstatus) {\n        //db was empty\n        return state;\n      }\n      return state.map((question, index) => {\n        if (action.qstatus[index]) {\n          return {\n            ...question,\n            answeredCount: action.qstatus[index].answeredCount,\n            answeredTime: action.qstatus[index].answeredTime\n          };\n        }\n        return question;\n      });\n    case \"LESSON_ANSWER_QUESTION\":\n      return state.map(question => {\n        if (isLessonInputCorrect(action.answer, question.answer)) {\n          return {\n            ...question,\n            answeredCount: question.answeredCount + 1,\n            answeredTime: action.time\n          };\n        }\n        return question;\n      });\n    case \"LESSON_SET_ANSWERED_COUNT\":\n      const questionToSetAnsweredCount = action.question;\n      questionToSetAnsweredCount.answeredCount = action.answeredCount;\n      return [...state, questionToSetAnsweredCount];\n    default:\n      return state;\n  }\n}\nexport function questionIndex() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"LESSON_CHANGE_QUESTION_INDEX\":\n      return action.id;\n    default:\n      return state;\n  }\n}\nexport function youtubeVideoId() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"CHANGE_VIDEO_ID\":\n      return action.id;\n    default:\n      return state;\n  }\n}\nexport function lessonNewWordsLearnedToday() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"LESSON_SET_NEW_WORDS_LEARNED_TODAY\":\n      return action.words;\n    case \"LESSON_INC_NEW_WORDS_LEARNED_TODAY\":\n      return state + 1;\n    default:\n      return state;\n  }\n}\nexport function lessonLastSessionStartTime() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"LESSON_SET_LSST\") {\n    return action.lsst;\n  }\n  return state;\n}\nexport function lessonQuestionPrompt() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"LESSON_SET_QUESTION_PROMPT\") {\n    return action.prompt;\n  }\n  return state;\n}","map":{"version":3,"names":["isLessonInputCorrect","lessonError","state","arguments","length","undefined","action","type","error","lessonInput","input","lessonReview","review","lessonNumberOfTimesWrong","lessonAuthor","author","lessonLessonName","lessonName","questions","qstatus","map","question","index","answeredCount","answeredTime","answer","time","questionToSetAnsweredCount","questionIndex","id","youtubeVideoId","lessonNewWordsLearnedToday","words","lessonLastSessionStartTime","lsst","lessonQuestionPrompt","prompt"],"sources":["/home/xacket/Projects/engresume/src/reducers/learn.js"],"sourcesContent":["import { isLessonInputCorrect } from \"../pages/learn/utils\";\n\nexport function lessonError(state = \"\", action) {\n  switch (action.type) {\n    case \"LESSON_UPDATE_ERROR\":\n      return action.error;\n    default:\n      return state;\n  }\n}\n\nexport function lessonInput(state = \"\", action) {\n  switch (action.type) {\n    case \"LESSON_UPDATE_INPUT\":\n      return action.input;\n    default:\n      return state;\n  }\n}\n\nexport function lessonReview(state = false, action) {\n  if (action.type === \"LESSON_UPDATE_REVIEW\") {\n    return action.review;\n  }\n  return state;\n}\n\nexport function lessonNumberOfTimesWrong(state = 1, action) {\n  switch (action.type) {\n    case \"LESSON_INC_NUM_TIMES_WRONG\":\n      return state + 1;\n    case \"LESSON_RESET_NUM_TIMES_WRONG\":\n      return 1;\n    default:\n      return state;\n  }\n}\n\nexport function lessonAuthor(state = null, action) {\n  switch (action.type) {\n    case \"LESSON_SET_AUTHOR\":\n      return action.author;\n    default:\n      return state;\n  }\n}\n\nexport function lessonLessonName(state = \"\", action) {\n  if (action.type === \"LESSON_SET_LESSON_NAME\") {\n    return action.lessonName;\n  }\n\n  return state;\n}\n\nexport function questions(state = [], action) {\n  switch (action.type) {\n    case \"LESSON_SET_QUESTIONS\":\n      return action.questions;\n    case \"LESSON_UPDATE_ANSWERED_COUNTS_TIMES\":\n      if (!action.qstatus) {\n        //db was empty\n        return state;\n      }\n      return state.map((question, index) => {\n        if (action.qstatus[index]) {\n          return {\n            ...question,\n            answeredCount: action.qstatus[index].answeredCount,\n            answeredTime: action.qstatus[index].answeredTime,\n          };\n        }\n        return question;\n      });\n    case \"LESSON_ANSWER_QUESTION\":\n      return state.map((question) => {\n        if (isLessonInputCorrect(action.answer, question.answer)) {\n          return {\n            ...question,\n            answeredCount: question.answeredCount + 1,\n            answeredTime: action.time,\n          };\n        }\n        return question;\n      });\n    case \"LESSON_SET_ANSWERED_COUNT\":\n      const questionToSetAnsweredCount = action.question;\n      questionToSetAnsweredCount.answeredCount = action.answeredCount;\n      return [...state, questionToSetAnsweredCount];\n    default:\n      return state;\n  }\n}\n\nexport function questionIndex(state = null, action) {\n  switch (action.type) {\n    case \"LESSON_CHANGE_QUESTION_INDEX\":\n      return action.id;\n    default:\n      return state;\n  }\n}\n\nexport function youtubeVideoId(state = null, action) {\n  switch (action.type) {\n    case \"CHANGE_VIDEO_ID\":\n      return action.id;\n    default:\n      return state;\n  }\n}\n\nexport function lessonNewWordsLearnedToday(state = 0, action) {\n  switch (action.type) {\n    case \"LESSON_SET_NEW_WORDS_LEARNED_TODAY\":\n      return action.words;\n    case \"LESSON_INC_NEW_WORDS_LEARNED_TODAY\":\n      return state + 1;\n    default:\n      return state;\n  }\n}\n\nexport function lessonLastSessionStartTime(state = 0, action) {\n  if (action.type === \"LESSON_SET_LSST\") {\n    return action.lsst;\n  }\n  return state;\n}\n\nexport function lessonQuestionPrompt(state = \"\", action) {\n  if (action.type === \"LESSON_SET_QUESTION_PROMPT\") {\n    return action.prompt;\n  }\n  return state;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}