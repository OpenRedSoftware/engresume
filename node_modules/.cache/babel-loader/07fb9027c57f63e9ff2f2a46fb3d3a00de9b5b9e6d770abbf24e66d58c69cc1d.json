{"ast":null,"code":"var _jsxFileName = \"/home/xacket/Projects/engresume/src/pages/learn/corelesson/QuestionPrompt.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { getTimeUntilNextQuestion, isAQuestion, getCurrentQuestion, MAX_LEARN_WORDS_PER_DAY, MAX_ANSWERS, getNewQuestion } from \"../utils\";\nimport store from \"../../../reducers/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction nextReviewInEng() {\n  const mins = Math.floor(getTimeUntilNextQuestion() / 60);\n  if (mins < 60) {\n    return `${mins} minute${mins === 1 ? \"\" : \"s\"}`;\n  }\n  const hours = Math.floor(mins / 60);\n  return `${hours} hour${hours === 1 ? \"\" : \"s\"}`;\n}\nfunction getQuestionPrompt() {\n  if (isAQuestion()) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [getCurrentQuestion().question, getCurrentQuestion().answeredCount > 0 ? \"\" : /*#__PURE__*/_jsxDEV(\"sup\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted pl-2\",\n          style: {\n            fontSize: 13\n          },\n          children: \"New word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n  if (store.getState().lessonNewWordsLearnedToday >= MAX_LEARN_WORDS_PER_DAY) {\n    return `Congrats! You've reached your word limit for today. Next review is in ${nextReviewInEng()}.`;\n  }\n  if (store.getState().questions.filter(question => question.answeredCount < MAX_ANSWERS).length === 0) return \"Congradulations! You've learned everything in this lesson.\";\n  if (store.getState().questions.filter(question => question.answeredCount !== 0).length === store.getState().questions.length) {\n    return `You've seen all the words in this lesson! Next review is in ${nextReviewInEng()}.`;\n  }\n  return \"Something went wrong\";\n}\nfunction setQuestionPrompt() {\n  if (!isAQuestion() && getTimeUntilNextQuestion() === 0) {\n    store.dispatch({\n      type: \"LESSON_CHANGE_QUESTION_INDEX\",\n      id: getNewQuestion()\n    });\n  }\n  store.dispatch({\n    type: \"LESSON_SET_QUESTION_PROMPT\",\n    prompt: getQuestionPrompt()\n  });\n}\nlet refresherRunning = false;\nfunction startRefresher() {\n  if (refresherRunning) {\n    return;\n  }\n  refresherRunning = true;\n  setInterval(() => {\n    setQuestionPrompt();\n  }, 1000);\n}\nconst QuestionPrompt = props => {\n  _s();\n  useEffect(() => {\n    setQuestionPrompt();\n  }, [props.questionIndex]);\n  startRefresher();\n  return /*#__PURE__*/_jsxDEV(Form.Label, {\n    children: props.questionPrompt\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 10\n  }, this);\n};\n_s(QuestionPrompt, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = QuestionPrompt;\nconst mapStateToProps = state => ({\n  questionIndex: state.questionIndex,\n  questionPrompt: state.lessonQuestionPrompt\n  //  qLearnedToday: state.lessonNewWordsLearnedToday\n});\n\nexport default connect(mapStateToProps)(QuestionPrompt);\nvar _c;\n$RefreshReg$(_c, \"QuestionPrompt\");","map":{"version":3,"names":["React","useEffect","Form","connect","getTimeUntilNextQuestion","isAQuestion","getCurrentQuestion","MAX_LEARN_WORDS_PER_DAY","MAX_ANSWERS","getNewQuestion","store","jsxDEV","_jsxDEV","nextReviewInEng","mins","Math","floor","hours","getQuestionPrompt","children","question","answeredCount","className","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","getState","lessonNewWordsLearnedToday","questions","filter","length","setQuestionPrompt","dispatch","type","id","prompt","refresherRunning","startRefresher","setInterval","QuestionPrompt","props","_s","questionIndex","Label","questionPrompt","_c","mapStateToProps","state","lessonQuestionPrompt","$RefreshReg$"],"sources":["/home/xacket/Projects/engresume/src/pages/learn/corelesson/QuestionPrompt.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  getTimeUntilNextQuestion,\n  isAQuestion,\n  getCurrentQuestion,\n  MAX_LEARN_WORDS_PER_DAY,\n  MAX_ANSWERS,\n  getNewQuestion,\n} from \"../utils\";\nimport store from \"../../../reducers/store\";\n\nfunction nextReviewInEng() {\n  const mins = Math.floor(getTimeUntilNextQuestion() / 60);\n\n  if (mins < 60) {\n    return `${mins} minute${mins === 1 ? \"\" : \"s\"}`;\n  }\n\n  const hours = Math.floor(mins / 60);\n  return `${hours} hour${hours === 1 ? \"\" : \"s\"}`;\n}\n\nfunction getQuestionPrompt() {\n  if (isAQuestion()) {\n    return (\n      <span>\n        {getCurrentQuestion().question}\n        {getCurrentQuestion().answeredCount > 0 ? (\n          \"\"\n        ) : (\n          <sup>\n            <span className=\"text-muted pl-2\" style={{ fontSize: 13 }}>\n              New word\n            </span>\n          </sup>\n        )}\n      </span>\n    );\n  }\n\n  if (store.getState().lessonNewWordsLearnedToday >= MAX_LEARN_WORDS_PER_DAY) {\n    return `Congrats! You've reached your word limit for today. Next review is in ${nextReviewInEng()}.`;\n  }\n\n  if (\n    store\n      .getState()\n      .questions.filter((question) => question.answeredCount < MAX_ANSWERS)\n      .length === 0\n  )\n    return \"Congradulations! You've learned everything in this lesson.\";\n\n  if (\n    store\n      .getState()\n      .questions.filter((question) => question.answeredCount !== 0).length ===\n    store.getState().questions.length\n  ) {\n    return `You've seen all the words in this lesson! Next review is in ${nextReviewInEng()}.`;\n  }\n\n  return \"Something went wrong\";\n}\n\nfunction setQuestionPrompt() {\n  if (!isAQuestion() && getTimeUntilNextQuestion() === 0) {\n    store.dispatch({\n      type: \"LESSON_CHANGE_QUESTION_INDEX\",\n      id: getNewQuestion(),\n    });\n  }\n  store.dispatch({\n    type: \"LESSON_SET_QUESTION_PROMPT\",\n    prompt: getQuestionPrompt(),\n  });\n}\n\nlet refresherRunning = false;\nfunction startRefresher() {\n  if (refresherRunning) {\n    return;\n  }\n  refresherRunning = true;\n\n  setInterval(() => {\n    setQuestionPrompt();\n  }, 1000);\n}\n\nconst QuestionPrompt = (props) => {\n  useEffect(() => {\n    setQuestionPrompt();\n  }, [props.questionIndex]);\n  startRefresher();\n\n  return <Form.Label>{props.questionPrompt}</Form.Label>;\n};\n\nconst mapStateToProps = (state) => ({\n  questionIndex: state.questionIndex,\n  questionPrompt: state.lessonQuestionPrompt,\n  //  qLearnedToday: state.lessonNewWordsLearnedToday\n});\n\nexport default connect(mapStateToProps)(QuestionPrompt);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}