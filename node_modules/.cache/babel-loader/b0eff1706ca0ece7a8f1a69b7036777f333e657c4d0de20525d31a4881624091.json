{"ast":null,"code":"var _jsxFileName = \"/home/xacket/Projects/engresume/src/pages/createlesson/NewQuestion.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Form, Button } from \"react-bootstrap\";\nimport store from \"../../reducers/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useFocus = () => {\n  _s();\n  const htmlElRef = useRef(null);\n  const setFocus = () => {\n    htmlElRef.current && htmlElRef.current.focus();\n  };\n  return [htmlElRef, setFocus];\n};\n_s(useFocus, \"sPMElNktqlbGoO1DmdgDOOzWQjQ=\");\nconst NewQuestion = _ref => {\n  _s2();\n  let {\n    newQuestion,\n    newHint,\n    newAnswer\n  } = _ref;\n  const [questionInputRef, setInputFocus] = useFocus();\n  const addQuestion = () => {\n    store.dispatch({\n      type: \"CREATE_LESSON_ADD_QUESTION\",\n      question: {\n        q: newQuestion,\n        a: newAnswer,\n        h: newHint\n      },\n      index: store.getState().createLessonEditIndex\n    });\n    store.dispatch({\n      type: \"UPDATE_NEW_QUESTION\",\n      question: \"\"\n    });\n    store.dispatch({\n      type: \"UPDATE_NEW_HINT\",\n      hint: \"\"\n    });\n    store.dispatch({\n      type: \"UPDATE_NEW_ANSWER\",\n      answer: \"\"\n    });\n    store.dispatch({\n      type: \"CREATE_LESSON_UPDATE_EDIT_INDEX\",\n      index: null\n    });\n    // @ts-ignore\n    setInputFocus();\n  };\n  const onEnter = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      addQuestion();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mt-4\",\n      children: \"Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"pt-2 pb-2 pl-2 pr-2 mt-3 mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Korean word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"\\uB208\",\n            ref: questionInputRef,\n            onKeyPress: onEnter,\n            onChange: e => {\n              store.dispatch({\n                type: \"UPDATE_NEW_ANSWER\",\n                answer: e.target.value\n              });\n            },\n            value: newAnswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"English word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Eyes\",\n            onKeyPress: onEnter,\n            onChange: e => {\n              store.dispatch({\n                type: \"UPDATE_NEW_QUESTION\",\n                question: e.target.value\n              });\n            },\n            value: newQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Memory hint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Two eyes = two n\",\n            onKeyPress: onEnter,\n            onChange: e => {\n              store.dispatch({\n                type: \"UPDATE_NEW_HINT\",\n                hint: e.target.value\n              });\n            },\n            value: newHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          className: \"float-right mr-2\",\n          onClick: addQuestion,\n          children: \"Add Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(NewQuestion, \"lE83M2PQV7mkTa0kIeSm8oWLCAw=\", false, function () {\n  return [useFocus];\n});\n_c = NewQuestion;\nconst mapStateToProps = state => ({\n  newQuestion: state.newQuestion,\n  newHint: state.newHint,\n  newAnswer: state.newAnswer\n});\nexport default connect(mapStateToProps)(NewQuestion);\nvar _c;\n$RefreshReg$(_c, \"NewQuestion\");","map":{"version":3,"names":["React","useRef","connect","Card","Form","Button","store","jsxDEV","_jsxDEV","Fragment","_Fragment","useFocus","_s","htmlElRef","setFocus","current","focus","NewQuestion","_ref","_s2","newQuestion","newHint","newAnswer","questionInputRef","setInputFocus","addQuestion","dispatch","type","question","q","a","h","index","getState","createLessonEditIndex","hint","answer","onEnter","e","key","preventDefault","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Group","Label","Control","placeholder","ref","onKeyPress","onChange","target","value","variant","onClick","_c","mapStateToProps","state","$RefreshReg$"],"sources":["/home/xacket/Projects/engresume/src/pages/createlesson/NewQuestion.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Form, Button } from \"react-bootstrap\";\nimport store from \"../../reducers/store\";\n\nconst useFocus = () => {\n  const htmlElRef = useRef(null);\n  const setFocus = () => {\n    htmlElRef.current && htmlElRef.current.focus();\n  };\n\n  return [htmlElRef, setFocus];\n};\n\nconst NewQuestion = ({ newQuestion, newHint, newAnswer }) => {\n\n  const [questionInputRef, setInputFocus] = useFocus();\n\n  const addQuestion = () => {\n    store.dispatch({\n      type: \"CREATE_LESSON_ADD_QUESTION\",\n      question: {\n        q: newQuestion,\n        a: newAnswer,\n        h: newHint,\n      },\n      index: store.getState().createLessonEditIndex\n    });\n    store.dispatch({ type: \"UPDATE_NEW_QUESTION\", question: \"\" });\n    store.dispatch({ type: \"UPDATE_NEW_HINT\", hint: \"\" });\n    store.dispatch({ type: \"UPDATE_NEW_ANSWER\", answer: \"\" });\n    store.dispatch({ type: \"CREATE_LESSON_UPDATE_EDIT_INDEX\", index: null })\n    // @ts-ignore\n    setInputFocus();\n  };\n\n  const onEnter = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      addQuestion();\n    }\n  };\n\n  return (\n    <>\n      <h3 className=\"mt-4\">Questions</h3>\n      <Card className=\"pt-2 pb-2 pl-2 pr-2 mt-3 mb-5\">\n        <h4>New</h4>\n        <Form>\n          <Form.Group>\n            <Form.Label>Korean word</Form.Label>\n            <Form.Control\n              placeholder=\"ëˆˆ\"\n              ref={questionInputRef}\n              onKeyPress={onEnter}\n              onChange={(e) => {\n                store.dispatch({\n                  type: \"UPDATE_NEW_ANSWER\",\n                  answer: e.target.value,\n                });\n              }}\n              value={newAnswer}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>English word</Form.Label>\n            <Form.Control\n              placeholder=\"Eyes\"\n              onKeyPress={onEnter}\n              onChange={(e) => {\n                store.dispatch({\n                  type: \"UPDATE_NEW_QUESTION\",\n                  question: e.target.value,\n                });\n              }}\n              value={newQuestion}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Memory hint</Form.Label>\n            <Form.Control\n              placeholder=\"Two eyes = two n\"\n              onKeyPress={onEnter}\n              onChange={(e) => {\n                store.dispatch({\n                  type: \"UPDATE_NEW_HINT\",\n                  hint: e.target.value,\n                });\n              }}\n              value={newHint}\n            />\n          </Form.Group>\n\n          <Button\n            variant=\"secondary\"\n            className=\"float-right mr-2\"\n            onClick={addQuestion}\n          >\n            Add Question\n          </Button>\n        </Form>\n      </Card>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  newQuestion: state.newQuestion,\n  newHint: state.newHint,\n  newAnswer: state.newAnswer,\n});\n\nexport default connect(mapStateToProps)(NewQuestion);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}